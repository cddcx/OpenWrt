name: 22.03

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-22.03
  CONFIG_FILE: ${CONFIG_FILE}
  DIY_SH: ${DIY_SH}
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: Ubuntu-22.04

    steps:
    - name: 准备结束
      uses: actions/checkout@main
      
    #- name: 加载 Settings.ini
      #run: |
        #source "${GITHUB_WORKSPACE}/devices/common/settings.ini"
        #echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        #echo "DIY_SH=${DIY_SH}" >> $GITHUB_ENV
      
    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev swig libpython3-dev aria2 jq subversion qemu-utils ccache rename libelf-dev device-tree-compiler
        sudo -E apt-get -qq purge azure-cli ghc* zulu* llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 拉取openwrt源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
    - name: 下载kiddin9的自定义设置
      working-directory: /workdir
      run: |
        svn co https://github.com/kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1/trunk/devices/common devices/common
        svn co https://github.com/kiddin9/OpenWrt_x86-r2s-r4s-r5s-N1/trunk/devices/x86_64 devices/x86_64
        rm -rf devices/common/settings.ini
        
    - name: 加载自定义设置
      run: |
        cp -rf devices/common/. openwrt/
        cp -rf devices/x86_64/. openwrt/
        cp -rf devices openwrt/
        cd openwrt
        chmod +x devices/common/diy.sh
        /bin/bash "devices/common/diy.sh"
        chmod +x devices/x86_64/diy.sh
        /bin/bash "devices/x86_64/diy.sh"
        cp -f devices/common/.config .config
        cp -f devices/x86_64/.config .config

    - name: 应用补丁
      run: |
        cd openwrt
        find "devices/common/patches" -type f ! -name 'china_mirrors.patch' -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -B --merge -p1 -E --forward"
        #git apply devices/common/patches/*.patch
        sed -i '$a  \
        CONFIG_CPU_FREQ_GOV_POWERSAVE=y \
        CONFIG_CPU_FREQ_GOV_USERSPACE=y \
        CONFIG_CPU_FREQ_GOV_ONDEMAND=y \
        CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y \
        CONFIG_CRYPTO_CHACHA20_NEON=y \
        CONFIG_CRYPTO_CHACHA20POLY1305=y \
        CONFIG_FAT_DEFAULT_IOCHARSET="utf8" \
        ' `find target/linux -path "target/linux/*/config-*"`

    - name: 下载依赖
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 整理文件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        rm -rf packages
        rm -rf feeds.buildinfo
        rm -rf version.buildinfo
        rm -rf *kernel.bin
        rm -rf profiles.json
        rm -rf *rootfs.img
        rm -rf *.manifest
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        
    - name: 上传固件
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
